/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as protectedRouteRouteImport } from './routes/(protected)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as authUpdatePasswordRouteImport } from './routes/(auth)/update-password'
import { Route as authResetPasswordRouteImport } from './routes/(auth)/reset-password'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as protectedUsersIndexRouteImport } from './routes/(protected)/users/index'
import { Route as protectedProfileIndexRouteImport } from './routes/(protected)/profile/index'
import { Route as protectedNotificationsIndexRouteImport } from './routes/(protected)/notifications/index'
import { Route as protectedEnrollmentIndexRouteImport } from './routes/(protected)/enrollment/index'
import { Route as protectedDashboardIndexRouteImport } from './routes/(protected)/dashboard/index'
import { Route as protectedCoursesIndexRouteImport } from './routes/(protected)/courses/index'
import { Route as protectedBillingIndexRouteImport } from './routes/(protected)/billing/index'
import { Route as protectedEnrollmentPeriodIdRouteImport } from './routes/(protected)/enrollment/$periodId'
import { Route as protectedCoursesCourseIdRouteImport } from './routes/(protected)/courses/$courseId'
import { Route as protectedBillingRedirectRouteImport } from './routes/(protected)/billing/redirect'
import { Route as protectedBillingBillingIdRouteImport } from './routes/(protected)/billing/$billingId'
import { Route as protectedCoursesCourseIdIndexRouteImport } from './routes/(protected)/courses/$courseId/index'
import { Route as protectedCoursesCourseIdModulesIndexRouteImport } from './routes/(protected)/courses/$courseId/modules/index'
import { Route as protectedCoursesCourseIdGradesIndexRouteImport } from './routes/(protected)/courses/$courseId/grades/index'
import { Route as protectedCoursesCourseIdAssignmentsIndexRouteImport } from './routes/(protected)/courses/$courseId/assignments/index'

const protectedRouteRoute = protectedRouteRouteImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const authUpdatePasswordRoute = authUpdatePasswordRouteImport.update({
  id: '/(auth)/update-password',
  path: '/update-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authResetPasswordRoute = authResetPasswordRouteImport.update({
  id: '/(auth)/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedUsersIndexRoute = protectedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedProfileIndexRoute = protectedProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedNotificationsIndexRoute =
  protectedNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedEnrollmentIndexRoute =
  protectedEnrollmentIndexRouteImport.update({
    id: '/enrollment/',
    path: '/enrollment/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedDashboardIndexRoute = protectedDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedCoursesIndexRoute = protectedCoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedBillingIndexRoute = protectedBillingIndexRouteImport.update({
  id: '/billing/',
  path: '/billing/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedEnrollmentPeriodIdRoute =
  protectedEnrollmentPeriodIdRouteImport.update({
    id: '/enrollment/$periodId',
    path: '/enrollment/$periodId',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesCourseIdRoute =
  protectedCoursesCourseIdRouteImport.update({
    id: '/courses/$courseId',
    path: '/courses/$courseId',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedBillingRedirectRoute =
  protectedBillingRedirectRouteImport.update({
    id: '/billing/redirect',
    path: '/billing/redirect',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedBillingBillingIdRoute =
  protectedBillingBillingIdRouteImport.update({
    id: '/billing/$billingId',
    path: '/billing/$billingId',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesCourseIdIndexRoute =
  protectedCoursesCourseIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => protectedCoursesCourseIdRoute,
  } as any)
const protectedCoursesCourseIdModulesIndexRoute =
  protectedCoursesCourseIdModulesIndexRouteImport.update({
    id: '/modules/',
    path: '/modules/',
    getParentRoute: () => protectedCoursesCourseIdRoute,
  } as any)
const protectedCoursesCourseIdGradesIndexRoute =
  protectedCoursesCourseIdGradesIndexRouteImport.update({
    id: '/grades/',
    path: '/grades/',
    getParentRoute: () => protectedCoursesCourseIdRoute,
  } as any)
const protectedCoursesCourseIdAssignmentsIndexRoute =
  protectedCoursesCourseIdAssignmentsIndexRouteImport.update({
    id: '/assignments/',
    path: '/assignments/',
    getParentRoute: () => protectedCoursesCourseIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/update-password': typeof authUpdatePasswordRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/billing/$billingId': typeof protectedBillingBillingIdRoute
  '/billing/redirect': typeof protectedBillingRedirectRoute
  '/courses/$courseId': typeof protectedCoursesCourseIdRouteWithChildren
  '/enrollment/$periodId': typeof protectedEnrollmentPeriodIdRoute
  '/billing': typeof protectedBillingIndexRoute
  '/courses': typeof protectedCoursesIndexRoute
  '/dashboard': typeof protectedDashboardIndexRoute
  '/enrollment': typeof protectedEnrollmentIndexRoute
  '/notifications': typeof protectedNotificationsIndexRoute
  '/profile': typeof protectedProfileIndexRoute
  '/users': typeof protectedUsersIndexRoute
  '/courses/$courseId/': typeof protectedCoursesCourseIdIndexRoute
  '/courses/$courseId/assignments': typeof protectedCoursesCourseIdAssignmentsIndexRoute
  '/courses/$courseId/grades': typeof protectedCoursesCourseIdGradesIndexRoute
  '/courses/$courseId/modules': typeof protectedCoursesCourseIdModulesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof protectedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/update-password': typeof authUpdatePasswordRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/billing/$billingId': typeof protectedBillingBillingIdRoute
  '/billing/redirect': typeof protectedBillingRedirectRoute
  '/enrollment/$periodId': typeof protectedEnrollmentPeriodIdRoute
  '/billing': typeof protectedBillingIndexRoute
  '/courses': typeof protectedCoursesIndexRoute
  '/dashboard': typeof protectedDashboardIndexRoute
  '/enrollment': typeof protectedEnrollmentIndexRoute
  '/notifications': typeof protectedNotificationsIndexRoute
  '/profile': typeof protectedProfileIndexRoute
  '/users': typeof protectedUsersIndexRoute
  '/courses/$courseId': typeof protectedCoursesCourseIdIndexRoute
  '/courses/$courseId/assignments': typeof protectedCoursesCourseIdAssignmentsIndexRoute
  '/courses/$courseId/grades': typeof protectedCoursesCourseIdGradesIndexRoute
  '/courses/$courseId/modules': typeof protectedCoursesCourseIdModulesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(protected)': typeof protectedRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/update-password': typeof authUpdatePasswordRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/(protected)/billing/$billingId': typeof protectedBillingBillingIdRoute
  '/(protected)/billing/redirect': typeof protectedBillingRedirectRoute
  '/(protected)/courses/$courseId': typeof protectedCoursesCourseIdRouteWithChildren
  '/(protected)/enrollment/$periodId': typeof protectedEnrollmentPeriodIdRoute
  '/(protected)/billing/': typeof protectedBillingIndexRoute
  '/(protected)/courses/': typeof protectedCoursesIndexRoute
  '/(protected)/dashboard/': typeof protectedDashboardIndexRoute
  '/(protected)/enrollment/': typeof protectedEnrollmentIndexRoute
  '/(protected)/notifications/': typeof protectedNotificationsIndexRoute
  '/(protected)/profile/': typeof protectedProfileIndexRoute
  '/(protected)/users/': typeof protectedUsersIndexRoute
  '/(protected)/courses/$courseId/': typeof protectedCoursesCourseIdIndexRoute
  '/(protected)/courses/$courseId/assignments/': typeof protectedCoursesCourseIdAssignmentsIndexRoute
  '/(protected)/courses/$courseId/grades/': typeof protectedCoursesCourseIdGradesIndexRoute
  '/(protected)/courses/$courseId/modules/': typeof protectedCoursesCourseIdModulesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/demo/tanstack-query'
    | '/billing/$billingId'
    | '/billing/redirect'
    | '/courses/$courseId'
    | '/enrollment/$periodId'
    | '/billing'
    | '/courses'
    | '/dashboard'
    | '/enrollment'
    | '/notifications'
    | '/profile'
    | '/users'
    | '/courses/$courseId/'
    | '/courses/$courseId/assignments'
    | '/courses/$courseId/grades'
    | '/courses/$courseId/modules'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/demo/tanstack-query'
    | '/billing/$billingId'
    | '/billing/redirect'
    | '/enrollment/$periodId'
    | '/billing'
    | '/courses'
    | '/dashboard'
    | '/enrollment'
    | '/notifications'
    | '/profile'
    | '/users'
    | '/courses/$courseId'
    | '/courses/$courseId/assignments'
    | '/courses/$courseId/grades'
    | '/courses/$courseId/modules'
  id:
    | '__root__'
    | '/'
    | '/(protected)'
    | '/(auth)/login'
    | '/(auth)/reset-password'
    | '/(auth)/update-password'
    | '/demo/tanstack-query'
    | '/(protected)/billing/$billingId'
    | '/(protected)/billing/redirect'
    | '/(protected)/courses/$courseId'
    | '/(protected)/enrollment/$periodId'
    | '/(protected)/billing/'
    | '/(protected)/courses/'
    | '/(protected)/dashboard/'
    | '/(protected)/enrollment/'
    | '/(protected)/notifications/'
    | '/(protected)/profile/'
    | '/(protected)/users/'
    | '/(protected)/courses/$courseId/'
    | '/(protected)/courses/$courseId/assignments/'
    | '/(protected)/courses/$courseId/grades/'
    | '/(protected)/courses/$courseId/modules/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  protectedRouteRoute: typeof protectedRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authUpdatePasswordRoute: typeof authUpdatePasswordRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/update-password': {
      id: '/(auth)/update-password'
      path: '/update-password'
      fullPath: '/update-password'
      preLoaderRoute: typeof authUpdatePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/users/': {
      id: '/(protected)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof protectedUsersIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/profile/': {
      id: '/(protected)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof protectedProfileIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/notifications/': {
      id: '/(protected)/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof protectedNotificationsIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/enrollment/': {
      id: '/(protected)/enrollment/'
      path: '/enrollment'
      fullPath: '/enrollment'
      preLoaderRoute: typeof protectedEnrollmentIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/dashboard/': {
      id: '/(protected)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof protectedDashboardIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/': {
      id: '/(protected)/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof protectedCoursesIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/': {
      id: '/(protected)/billing/'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof protectedBillingIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/enrollment/$periodId': {
      id: '/(protected)/enrollment/$periodId'
      path: '/enrollment/$periodId'
      fullPath: '/enrollment/$periodId'
      preLoaderRoute: typeof protectedEnrollmentPeriodIdRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/$courseId': {
      id: '/(protected)/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof protectedCoursesCourseIdRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/redirect': {
      id: '/(protected)/billing/redirect'
      path: '/billing/redirect'
      fullPath: '/billing/redirect'
      preLoaderRoute: typeof protectedBillingRedirectRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/$billingId': {
      id: '/(protected)/billing/$billingId'
      path: '/billing/$billingId'
      fullPath: '/billing/$billingId'
      preLoaderRoute: typeof protectedBillingBillingIdRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/$courseId/': {
      id: '/(protected)/courses/$courseId/'
      path: '/'
      fullPath: '/courses/$courseId/'
      preLoaderRoute: typeof protectedCoursesCourseIdIndexRouteImport
      parentRoute: typeof protectedCoursesCourseIdRoute
    }
    '/(protected)/courses/$courseId/modules/': {
      id: '/(protected)/courses/$courseId/modules/'
      path: '/modules'
      fullPath: '/courses/$courseId/modules'
      preLoaderRoute: typeof protectedCoursesCourseIdModulesIndexRouteImport
      parentRoute: typeof protectedCoursesCourseIdRoute
    }
    '/(protected)/courses/$courseId/grades/': {
      id: '/(protected)/courses/$courseId/grades/'
      path: '/grades'
      fullPath: '/courses/$courseId/grades'
      preLoaderRoute: typeof protectedCoursesCourseIdGradesIndexRouteImport
      parentRoute: typeof protectedCoursesCourseIdRoute
    }
    '/(protected)/courses/$courseId/assignments/': {
      id: '/(protected)/courses/$courseId/assignments/'
      path: '/assignments'
      fullPath: '/courses/$courseId/assignments'
      preLoaderRoute: typeof protectedCoursesCourseIdAssignmentsIndexRouteImport
      parentRoute: typeof protectedCoursesCourseIdRoute
    }
  }
}

interface protectedCoursesCourseIdRouteChildren {
  protectedCoursesCourseIdIndexRoute: typeof protectedCoursesCourseIdIndexRoute
  protectedCoursesCourseIdAssignmentsIndexRoute: typeof protectedCoursesCourseIdAssignmentsIndexRoute
  protectedCoursesCourseIdGradesIndexRoute: typeof protectedCoursesCourseIdGradesIndexRoute
  protectedCoursesCourseIdModulesIndexRoute: typeof protectedCoursesCourseIdModulesIndexRoute
}

const protectedCoursesCourseIdRouteChildren: protectedCoursesCourseIdRouteChildren =
  {
    protectedCoursesCourseIdIndexRoute: protectedCoursesCourseIdIndexRoute,
    protectedCoursesCourseIdAssignmentsIndexRoute:
      protectedCoursesCourseIdAssignmentsIndexRoute,
    protectedCoursesCourseIdGradesIndexRoute:
      protectedCoursesCourseIdGradesIndexRoute,
    protectedCoursesCourseIdModulesIndexRoute:
      protectedCoursesCourseIdModulesIndexRoute,
  }

const protectedCoursesCourseIdRouteWithChildren =
  protectedCoursesCourseIdRoute._addFileChildren(
    protectedCoursesCourseIdRouteChildren,
  )

interface protectedRouteRouteChildren {
  protectedBillingBillingIdRoute: typeof protectedBillingBillingIdRoute
  protectedBillingRedirectRoute: typeof protectedBillingRedirectRoute
  protectedCoursesCourseIdRoute: typeof protectedCoursesCourseIdRouteWithChildren
  protectedEnrollmentPeriodIdRoute: typeof protectedEnrollmentPeriodIdRoute
  protectedBillingIndexRoute: typeof protectedBillingIndexRoute
  protectedCoursesIndexRoute: typeof protectedCoursesIndexRoute
  protectedDashboardIndexRoute: typeof protectedDashboardIndexRoute
  protectedEnrollmentIndexRoute: typeof protectedEnrollmentIndexRoute
  protectedNotificationsIndexRoute: typeof protectedNotificationsIndexRoute
  protectedProfileIndexRoute: typeof protectedProfileIndexRoute
  protectedUsersIndexRoute: typeof protectedUsersIndexRoute
}

const protectedRouteRouteChildren: protectedRouteRouteChildren = {
  protectedBillingBillingIdRoute: protectedBillingBillingIdRoute,
  protectedBillingRedirectRoute: protectedBillingRedirectRoute,
  protectedCoursesCourseIdRoute: protectedCoursesCourseIdRouteWithChildren,
  protectedEnrollmentPeriodIdRoute: protectedEnrollmentPeriodIdRoute,
  protectedBillingIndexRoute: protectedBillingIndexRoute,
  protectedCoursesIndexRoute: protectedCoursesIndexRoute,
  protectedDashboardIndexRoute: protectedDashboardIndexRoute,
  protectedEnrollmentIndexRoute: protectedEnrollmentIndexRoute,
  protectedNotificationsIndexRoute: protectedNotificationsIndexRoute,
  protectedProfileIndexRoute: protectedProfileIndexRoute,
  protectedUsersIndexRoute: protectedUsersIndexRoute,
}

const protectedRouteRouteWithChildren = protectedRouteRoute._addFileChildren(
  protectedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  protectedRouteRoute: protectedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authUpdatePasswordRoute: authUpdatePasswordRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
