/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as protectedRouteRouteImport } from './routes/(protected)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as authUpdatePasswordRouteImport } from './routes/(auth)/update-password'
import { Route as authResetPasswordRouteImport } from './routes/(auth)/reset-password'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as protectedUsersIndexRouteImport } from './routes/(protected)/users/index'
import { Route as protectedProfileIndexRouteImport } from './routes/(protected)/profile/index'
import { Route as protectedPricingIndexRouteImport } from './routes/(protected)/pricing/index'
import { Route as protectedNotificationsIndexRouteImport } from './routes/(protected)/notifications/index'
import { Route as protectedEnrollmentIndexRouteImport } from './routes/(protected)/enrollment/index'
import { Route as protectedDashboardIndexRouteImport } from './routes/(protected)/dashboard/index'
import { Route as protectedCurriculumIndexRouteImport } from './routes/(protected)/curriculum/index'
import { Route as protectedCoursesIndexRouteImport } from './routes/(protected)/courses/index'
import { Route as protectedCmsIndexRouteImport } from './routes/(protected)/cms/index'
import { Route as protectedBillingIndexRouteImport } from './routes/(protected)/billing/index'
import { Route as protectedEnrollmentCreateRouteImport } from './routes/(protected)/enrollment/create'
import { Route as protectedEnrollmentPeriodIdRouteImport } from './routes/(protected)/enrollment/$periodId'
import { Route as protectedCurriculumCreateRouteImport } from './routes/(protected)/curriculum/create'
import { Route as protectedCurriculumCurriculumIdRouteImport } from './routes/(protected)/curriculum/$curriculumId'
import { Route as protectedCoursesCourseCodeRouteImport } from './routes/(protected)/courses/$courseCode'
import { Route as protectedBillingRedirectRouteImport } from './routes/(protected)/billing/redirect'
import { Route as protectedBillingCreateRouteImport } from './routes/(protected)/billing/create'
import { Route as protectedBillingBillingIdRouteImport } from './routes/(protected)/billing/$billingId'
import { Route as protectedCurriculumProgramsIndexRouteImport } from './routes/(protected)/curriculum/programs/index'
import { Route as protectedCurriculumMajorsIndexRouteImport } from './routes/(protected)/curriculum/majors/index'
import { Route as protectedCurriculumCoursesIndexRouteImport } from './routes/(protected)/curriculum/courses/index'
import { Route as protectedCurriculumBuilderIndexRouteImport } from './routes/(protected)/curriculum/builder/index'
import { Route as protectedCurriculumCoursesCreateRouteImport } from './routes/(protected)/curriculum/courses/create'
import { Route as protectedCurriculumCurriculumIdEditRouteImport } from './routes/(protected)/curriculum/$curriculumId_.edit'
import { Route as protectedCoursesCourseCodePublishRouteImport } from './routes/(protected)/courses/$courseCode_.publish'
import { Route as protectedCoursesCourseCodeEditRouteImport } from './routes/(protected)/courses/$courseCode_.edit'
import { Route as protectedBillingBillingIdEditRouteImport } from './routes/(protected)/billing/$billingId_.edit'
import { Route as protectedCoursesCourseCodeOverviewIndexRouteImport } from './routes/(protected)/courses/$courseCode/overview/index'
import { Route as protectedCoursesCourseCodeModulesIndexRouteImport } from './routes/(protected)/courses/$courseCode/modules/index'
import { Route as protectedCoursesCourseCodeGradesIndexRouteImport } from './routes/(protected)/courses/$courseCode/grades/index'
import { Route as protectedCoursesCourseCodeAssignmentsIndexRouteImport } from './routes/(protected)/courses/$courseCode/assignments/index'
import { Route as protectedCoursesCourseCodeModulesCreateRouteImport } from './routes/(protected)/courses/$courseCode/modules/create'
import { Route as protectedCoursesCourseCodeModulesItemIdIndexRouteImport } from './routes/(protected)/courses/$courseCode/modules/$itemId/index'
import { Route as protectedCoursesCourseCodeModulesItemIdEditRouteImport } from './routes/(protected)/courses/$courseCode/modules/$itemId/edit'

const protectedRouteRoute = protectedRouteRouteImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const authUpdatePasswordRoute = authUpdatePasswordRouteImport.update({
  id: '/(auth)/update-password',
  path: '/update-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authResetPasswordRoute = authResetPasswordRouteImport.update({
  id: '/(auth)/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedUsersIndexRoute = protectedUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedProfileIndexRoute = protectedProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedPricingIndexRoute = protectedPricingIndexRouteImport.update({
  id: '/pricing/',
  path: '/pricing/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedNotificationsIndexRoute =
  protectedNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedEnrollmentIndexRoute =
  protectedEnrollmentIndexRouteImport.update({
    id: '/enrollment/',
    path: '/enrollment/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedDashboardIndexRoute = protectedDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedCurriculumIndexRoute =
  protectedCurriculumIndexRouteImport.update({
    id: '/curriculum/',
    path: '/curriculum/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesIndexRoute = protectedCoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedCmsIndexRoute = protectedCmsIndexRouteImport.update({
  id: '/cms/',
  path: '/cms/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedBillingIndexRoute = protectedBillingIndexRouteImport.update({
  id: '/billing/',
  path: '/billing/',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedEnrollmentCreateRoute =
  protectedEnrollmentCreateRouteImport.update({
    id: '/enrollment/create',
    path: '/enrollment/create',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedEnrollmentPeriodIdRoute =
  protectedEnrollmentPeriodIdRouteImport.update({
    id: '/enrollment/$periodId',
    path: '/enrollment/$periodId',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumCreateRoute =
  protectedCurriculumCreateRouteImport.update({
    id: '/curriculum/create',
    path: '/curriculum/create',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumCurriculumIdRoute =
  protectedCurriculumCurriculumIdRouteImport.update({
    id: '/curriculum/$curriculumId',
    path: '/curriculum/$curriculumId',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesCourseCodeRoute =
  protectedCoursesCourseCodeRouteImport.update({
    id: '/courses/$courseCode',
    path: '/courses/$courseCode',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedBillingRedirectRoute =
  protectedBillingRedirectRouteImport.update({
    id: '/billing/redirect',
    path: '/billing/redirect',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedBillingCreateRoute = protectedBillingCreateRouteImport.update({
  id: '/billing/create',
  path: '/billing/create',
  getParentRoute: () => protectedRouteRoute,
} as any)
const protectedBillingBillingIdRoute =
  protectedBillingBillingIdRouteImport.update({
    id: '/billing/$billingId',
    path: '/billing/$billingId',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumProgramsIndexRoute =
  protectedCurriculumProgramsIndexRouteImport.update({
    id: '/curriculum/programs/',
    path: '/curriculum/programs/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumMajorsIndexRoute =
  protectedCurriculumMajorsIndexRouteImport.update({
    id: '/curriculum/majors/',
    path: '/curriculum/majors/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumCoursesIndexRoute =
  protectedCurriculumCoursesIndexRouteImport.update({
    id: '/curriculum/courses/',
    path: '/curriculum/courses/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumBuilderIndexRoute =
  protectedCurriculumBuilderIndexRouteImport.update({
    id: '/curriculum/builder/',
    path: '/curriculum/builder/',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumCoursesCreateRoute =
  protectedCurriculumCoursesCreateRouteImport.update({
    id: '/curriculum/courses/create',
    path: '/curriculum/courses/create',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCurriculumCurriculumIdEditRoute =
  protectedCurriculumCurriculumIdEditRouteImport.update({
    id: '/curriculum/$curriculumId_/edit',
    path: '/curriculum/$curriculumId/edit',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesCourseCodePublishRoute =
  protectedCoursesCourseCodePublishRouteImport.update({
    id: '/courses/$courseCode_/publish',
    path: '/courses/$courseCode/publish',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesCourseCodeEditRoute =
  protectedCoursesCourseCodeEditRouteImport.update({
    id: '/courses/$courseCode_/edit',
    path: '/courses/$courseCode/edit',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedBillingBillingIdEditRoute =
  protectedBillingBillingIdEditRouteImport.update({
    id: '/billing/$billingId_/edit',
    path: '/billing/$billingId/edit',
    getParentRoute: () => protectedRouteRoute,
  } as any)
const protectedCoursesCourseCodeOverviewIndexRoute =
  protectedCoursesCourseCodeOverviewIndexRouteImport.update({
    id: '/overview/',
    path: '/overview/',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)
const protectedCoursesCourseCodeModulesIndexRoute =
  protectedCoursesCourseCodeModulesIndexRouteImport.update({
    id: '/modules/',
    path: '/modules/',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)
const protectedCoursesCourseCodeGradesIndexRoute =
  protectedCoursesCourseCodeGradesIndexRouteImport.update({
    id: '/grades/',
    path: '/grades/',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)
const protectedCoursesCourseCodeAssignmentsIndexRoute =
  protectedCoursesCourseCodeAssignmentsIndexRouteImport.update({
    id: '/assignments/',
    path: '/assignments/',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)
const protectedCoursesCourseCodeModulesCreateRoute =
  protectedCoursesCourseCodeModulesCreateRouteImport.update({
    id: '/modules/create',
    path: '/modules/create',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)
const protectedCoursesCourseCodeModulesItemIdIndexRoute =
  protectedCoursesCourseCodeModulesItemIdIndexRouteImport.update({
    id: '/modules/$itemId/',
    path: '/modules/$itemId/',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)
const protectedCoursesCourseCodeModulesItemIdEditRoute =
  protectedCoursesCourseCodeModulesItemIdEditRouteImport.update({
    id: '/modules/$itemId/edit',
    path: '/modules/$itemId/edit',
    getParentRoute: () => protectedCoursesCourseCodeRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/update-password': typeof authUpdatePasswordRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/billing/$billingId': typeof protectedBillingBillingIdRoute
  '/billing/create': typeof protectedBillingCreateRoute
  '/billing/redirect': typeof protectedBillingRedirectRoute
  '/courses/$courseCode': typeof protectedCoursesCourseCodeRouteWithChildren
  '/curriculum/$curriculumId': typeof protectedCurriculumCurriculumIdRoute
  '/curriculum/create': typeof protectedCurriculumCreateRoute
  '/enrollment/$periodId': typeof protectedEnrollmentPeriodIdRoute
  '/enrollment/create': typeof protectedEnrollmentCreateRoute
  '/billing': typeof protectedBillingIndexRoute
  '/cms': typeof protectedCmsIndexRoute
  '/courses': typeof protectedCoursesIndexRoute
  '/curriculum': typeof protectedCurriculumIndexRoute
  '/dashboard': typeof protectedDashboardIndexRoute
  '/enrollment': typeof protectedEnrollmentIndexRoute
  '/notifications': typeof protectedNotificationsIndexRoute
  '/pricing': typeof protectedPricingIndexRoute
  '/profile': typeof protectedProfileIndexRoute
  '/users': typeof protectedUsersIndexRoute
  '/billing/$billingId/edit': typeof protectedBillingBillingIdEditRoute
  '/courses/$courseCode/edit': typeof protectedCoursesCourseCodeEditRoute
  '/courses/$courseCode/publish': typeof protectedCoursesCourseCodePublishRoute
  '/curriculum/$curriculumId/edit': typeof protectedCurriculumCurriculumIdEditRoute
  '/curriculum/courses/create': typeof protectedCurriculumCoursesCreateRoute
  '/curriculum/builder': typeof protectedCurriculumBuilderIndexRoute
  '/curriculum/courses': typeof protectedCurriculumCoursesIndexRoute
  '/curriculum/majors': typeof protectedCurriculumMajorsIndexRoute
  '/curriculum/programs': typeof protectedCurriculumProgramsIndexRoute
  '/courses/$courseCode/modules/create': typeof protectedCoursesCourseCodeModulesCreateRoute
  '/courses/$courseCode/assignments': typeof protectedCoursesCourseCodeAssignmentsIndexRoute
  '/courses/$courseCode/grades': typeof protectedCoursesCourseCodeGradesIndexRoute
  '/courses/$courseCode/modules': typeof protectedCoursesCourseCodeModulesIndexRoute
  '/courses/$courseCode/overview': typeof protectedCoursesCourseCodeOverviewIndexRoute
  '/courses/$courseCode/modules/$itemId/edit': typeof protectedCoursesCourseCodeModulesItemIdEditRoute
  '/courses/$courseCode/modules/$itemId': typeof protectedCoursesCourseCodeModulesItemIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof protectedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/reset-password': typeof authResetPasswordRoute
  '/update-password': typeof authUpdatePasswordRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/billing/$billingId': typeof protectedBillingBillingIdRoute
  '/billing/create': typeof protectedBillingCreateRoute
  '/billing/redirect': typeof protectedBillingRedirectRoute
  '/courses/$courseCode': typeof protectedCoursesCourseCodeRouteWithChildren
  '/curriculum/$curriculumId': typeof protectedCurriculumCurriculumIdRoute
  '/curriculum/create': typeof protectedCurriculumCreateRoute
  '/enrollment/$periodId': typeof protectedEnrollmentPeriodIdRoute
  '/enrollment/create': typeof protectedEnrollmentCreateRoute
  '/billing': typeof protectedBillingIndexRoute
  '/cms': typeof protectedCmsIndexRoute
  '/courses': typeof protectedCoursesIndexRoute
  '/curriculum': typeof protectedCurriculumIndexRoute
  '/dashboard': typeof protectedDashboardIndexRoute
  '/enrollment': typeof protectedEnrollmentIndexRoute
  '/notifications': typeof protectedNotificationsIndexRoute
  '/pricing': typeof protectedPricingIndexRoute
  '/profile': typeof protectedProfileIndexRoute
  '/users': typeof protectedUsersIndexRoute
  '/billing/$billingId/edit': typeof protectedBillingBillingIdEditRoute
  '/courses/$courseCode/edit': typeof protectedCoursesCourseCodeEditRoute
  '/courses/$courseCode/publish': typeof protectedCoursesCourseCodePublishRoute
  '/curriculum/$curriculumId/edit': typeof protectedCurriculumCurriculumIdEditRoute
  '/curriculum/courses/create': typeof protectedCurriculumCoursesCreateRoute
  '/curriculum/builder': typeof protectedCurriculumBuilderIndexRoute
  '/curriculum/courses': typeof protectedCurriculumCoursesIndexRoute
  '/curriculum/majors': typeof protectedCurriculumMajorsIndexRoute
  '/curriculum/programs': typeof protectedCurriculumProgramsIndexRoute
  '/courses/$courseCode/modules/create': typeof protectedCoursesCourseCodeModulesCreateRoute
  '/courses/$courseCode/assignments': typeof protectedCoursesCourseCodeAssignmentsIndexRoute
  '/courses/$courseCode/grades': typeof protectedCoursesCourseCodeGradesIndexRoute
  '/courses/$courseCode/modules': typeof protectedCoursesCourseCodeModulesIndexRoute
  '/courses/$courseCode/overview': typeof protectedCoursesCourseCodeOverviewIndexRoute
  '/courses/$courseCode/modules/$itemId/edit': typeof protectedCoursesCourseCodeModulesItemIdEditRoute
  '/courses/$courseCode/modules/$itemId': typeof protectedCoursesCourseCodeModulesItemIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(protected)': typeof protectedRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/update-password': typeof authUpdatePasswordRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/(protected)/billing/$billingId': typeof protectedBillingBillingIdRoute
  '/(protected)/billing/create': typeof protectedBillingCreateRoute
  '/(protected)/billing/redirect': typeof protectedBillingRedirectRoute
  '/(protected)/courses/$courseCode': typeof protectedCoursesCourseCodeRouteWithChildren
  '/(protected)/curriculum/$curriculumId': typeof protectedCurriculumCurriculumIdRoute
  '/(protected)/curriculum/create': typeof protectedCurriculumCreateRoute
  '/(protected)/enrollment/$periodId': typeof protectedEnrollmentPeriodIdRoute
  '/(protected)/enrollment/create': typeof protectedEnrollmentCreateRoute
  '/(protected)/billing/': typeof protectedBillingIndexRoute
  '/(protected)/cms/': typeof protectedCmsIndexRoute
  '/(protected)/courses/': typeof protectedCoursesIndexRoute
  '/(protected)/curriculum/': typeof protectedCurriculumIndexRoute
  '/(protected)/dashboard/': typeof protectedDashboardIndexRoute
  '/(protected)/enrollment/': typeof protectedEnrollmentIndexRoute
  '/(protected)/notifications/': typeof protectedNotificationsIndexRoute
  '/(protected)/pricing/': typeof protectedPricingIndexRoute
  '/(protected)/profile/': typeof protectedProfileIndexRoute
  '/(protected)/users/': typeof protectedUsersIndexRoute
  '/(protected)/billing/$billingId_/edit': typeof protectedBillingBillingIdEditRoute
  '/(protected)/courses/$courseCode_/edit': typeof protectedCoursesCourseCodeEditRoute
  '/(protected)/courses/$courseCode_/publish': typeof protectedCoursesCourseCodePublishRoute
  '/(protected)/curriculum/$curriculumId_/edit': typeof protectedCurriculumCurriculumIdEditRoute
  '/(protected)/curriculum/courses/create': typeof protectedCurriculumCoursesCreateRoute
  '/(protected)/curriculum/builder/': typeof protectedCurriculumBuilderIndexRoute
  '/(protected)/curriculum/courses/': typeof protectedCurriculumCoursesIndexRoute
  '/(protected)/curriculum/majors/': typeof protectedCurriculumMajorsIndexRoute
  '/(protected)/curriculum/programs/': typeof protectedCurriculumProgramsIndexRoute
  '/(protected)/courses/$courseCode/modules/create': typeof protectedCoursesCourseCodeModulesCreateRoute
  '/(protected)/courses/$courseCode/assignments/': typeof protectedCoursesCourseCodeAssignmentsIndexRoute
  '/(protected)/courses/$courseCode/grades/': typeof protectedCoursesCourseCodeGradesIndexRoute
  '/(protected)/courses/$courseCode/modules/': typeof protectedCoursesCourseCodeModulesIndexRoute
  '/(protected)/courses/$courseCode/overview/': typeof protectedCoursesCourseCodeOverviewIndexRoute
  '/(protected)/courses/$courseCode/modules/$itemId/edit': typeof protectedCoursesCourseCodeModulesItemIdEditRoute
  '/(protected)/courses/$courseCode/modules/$itemId/': typeof protectedCoursesCourseCodeModulesItemIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/demo/tanstack-query'
    | '/billing/$billingId'
    | '/billing/create'
    | '/billing/redirect'
    | '/courses/$courseCode'
    | '/curriculum/$curriculumId'
    | '/curriculum/create'
    | '/enrollment/$periodId'
    | '/enrollment/create'
    | '/billing'
    | '/cms'
    | '/courses'
    | '/curriculum'
    | '/dashboard'
    | '/enrollment'
    | '/notifications'
    | '/pricing'
    | '/profile'
    | '/users'
    | '/billing/$billingId/edit'
    | '/courses/$courseCode/edit'
    | '/courses/$courseCode/publish'
    | '/curriculum/$curriculumId/edit'
    | '/curriculum/courses/create'
    | '/curriculum/builder'
    | '/curriculum/courses'
    | '/curriculum/majors'
    | '/curriculum/programs'
    | '/courses/$courseCode/modules/create'
    | '/courses/$courseCode/assignments'
    | '/courses/$courseCode/grades'
    | '/courses/$courseCode/modules'
    | '/courses/$courseCode/overview'
    | '/courses/$courseCode/modules/$itemId/edit'
    | '/courses/$courseCode/modules/$itemId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/reset-password'
    | '/update-password'
    | '/demo/tanstack-query'
    | '/billing/$billingId'
    | '/billing/create'
    | '/billing/redirect'
    | '/courses/$courseCode'
    | '/curriculum/$curriculumId'
    | '/curriculum/create'
    | '/enrollment/$periodId'
    | '/enrollment/create'
    | '/billing'
    | '/cms'
    | '/courses'
    | '/curriculum'
    | '/dashboard'
    | '/enrollment'
    | '/notifications'
    | '/pricing'
    | '/profile'
    | '/users'
    | '/billing/$billingId/edit'
    | '/courses/$courseCode/edit'
    | '/courses/$courseCode/publish'
    | '/curriculum/$curriculumId/edit'
    | '/curriculum/courses/create'
    | '/curriculum/builder'
    | '/curriculum/courses'
    | '/curriculum/majors'
    | '/curriculum/programs'
    | '/courses/$courseCode/modules/create'
    | '/courses/$courseCode/assignments'
    | '/courses/$courseCode/grades'
    | '/courses/$courseCode/modules'
    | '/courses/$courseCode/overview'
    | '/courses/$courseCode/modules/$itemId/edit'
    | '/courses/$courseCode/modules/$itemId'
  id:
    | '__root__'
    | '/'
    | '/(protected)'
    | '/(auth)/login'
    | '/(auth)/reset-password'
    | '/(auth)/update-password'
    | '/demo/tanstack-query'
    | '/(protected)/billing/$billingId'
    | '/(protected)/billing/create'
    | '/(protected)/billing/redirect'
    | '/(protected)/courses/$courseCode'
    | '/(protected)/curriculum/$curriculumId'
    | '/(protected)/curriculum/create'
    | '/(protected)/enrollment/$periodId'
    | '/(protected)/enrollment/create'
    | '/(protected)/billing/'
    | '/(protected)/cms/'
    | '/(protected)/courses/'
    | '/(protected)/curriculum/'
    | '/(protected)/dashboard/'
    | '/(protected)/enrollment/'
    | '/(protected)/notifications/'
    | '/(protected)/pricing/'
    | '/(protected)/profile/'
    | '/(protected)/users/'
    | '/(protected)/billing/$billingId_/edit'
    | '/(protected)/courses/$courseCode_/edit'
    | '/(protected)/courses/$courseCode_/publish'
    | '/(protected)/curriculum/$curriculumId_/edit'
    | '/(protected)/curriculum/courses/create'
    | '/(protected)/curriculum/builder/'
    | '/(protected)/curriculum/courses/'
    | '/(protected)/curriculum/majors/'
    | '/(protected)/curriculum/programs/'
    | '/(protected)/courses/$courseCode/modules/create'
    | '/(protected)/courses/$courseCode/assignments/'
    | '/(protected)/courses/$courseCode/grades/'
    | '/(protected)/courses/$courseCode/modules/'
    | '/(protected)/courses/$courseCode/overview/'
    | '/(protected)/courses/$courseCode/modules/$itemId/edit'
    | '/(protected)/courses/$courseCode/modules/$itemId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  protectedRouteRoute: typeof protectedRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authUpdatePasswordRoute: typeof authUpdatePasswordRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/update-password': {
      id: '/(auth)/update-password'
      path: '/update-password'
      fullPath: '/update-password'
      preLoaderRoute: typeof authUpdatePasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/users/': {
      id: '/(protected)/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof protectedUsersIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/profile/': {
      id: '/(protected)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof protectedProfileIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/pricing/': {
      id: '/(protected)/pricing/'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof protectedPricingIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/notifications/': {
      id: '/(protected)/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof protectedNotificationsIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/enrollment/': {
      id: '/(protected)/enrollment/'
      path: '/enrollment'
      fullPath: '/enrollment'
      preLoaderRoute: typeof protectedEnrollmentIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/dashboard/': {
      id: '/(protected)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof protectedDashboardIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/': {
      id: '/(protected)/curriculum/'
      path: '/curriculum'
      fullPath: '/curriculum'
      preLoaderRoute: typeof protectedCurriculumIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/': {
      id: '/(protected)/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof protectedCoursesIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/cms/': {
      id: '/(protected)/cms/'
      path: '/cms'
      fullPath: '/cms'
      preLoaderRoute: typeof protectedCmsIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/': {
      id: '/(protected)/billing/'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof protectedBillingIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/enrollment/create': {
      id: '/(protected)/enrollment/create'
      path: '/enrollment/create'
      fullPath: '/enrollment/create'
      preLoaderRoute: typeof protectedEnrollmentCreateRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/enrollment/$periodId': {
      id: '/(protected)/enrollment/$periodId'
      path: '/enrollment/$periodId'
      fullPath: '/enrollment/$periodId'
      preLoaderRoute: typeof protectedEnrollmentPeriodIdRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/create': {
      id: '/(protected)/curriculum/create'
      path: '/curriculum/create'
      fullPath: '/curriculum/create'
      preLoaderRoute: typeof protectedCurriculumCreateRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/$curriculumId': {
      id: '/(protected)/curriculum/$curriculumId'
      path: '/curriculum/$curriculumId'
      fullPath: '/curriculum/$curriculumId'
      preLoaderRoute: typeof protectedCurriculumCurriculumIdRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/$courseCode': {
      id: '/(protected)/courses/$courseCode'
      path: '/courses/$courseCode'
      fullPath: '/courses/$courseCode'
      preLoaderRoute: typeof protectedCoursesCourseCodeRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/redirect': {
      id: '/(protected)/billing/redirect'
      path: '/billing/redirect'
      fullPath: '/billing/redirect'
      preLoaderRoute: typeof protectedBillingRedirectRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/create': {
      id: '/(protected)/billing/create'
      path: '/billing/create'
      fullPath: '/billing/create'
      preLoaderRoute: typeof protectedBillingCreateRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/$billingId': {
      id: '/(protected)/billing/$billingId'
      path: '/billing/$billingId'
      fullPath: '/billing/$billingId'
      preLoaderRoute: typeof protectedBillingBillingIdRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/programs/': {
      id: '/(protected)/curriculum/programs/'
      path: '/curriculum/programs'
      fullPath: '/curriculum/programs'
      preLoaderRoute: typeof protectedCurriculumProgramsIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/majors/': {
      id: '/(protected)/curriculum/majors/'
      path: '/curriculum/majors'
      fullPath: '/curriculum/majors'
      preLoaderRoute: typeof protectedCurriculumMajorsIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/courses/': {
      id: '/(protected)/curriculum/courses/'
      path: '/curriculum/courses'
      fullPath: '/curriculum/courses'
      preLoaderRoute: typeof protectedCurriculumCoursesIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/builder/': {
      id: '/(protected)/curriculum/builder/'
      path: '/curriculum/builder'
      fullPath: '/curriculum/builder'
      preLoaderRoute: typeof protectedCurriculumBuilderIndexRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/courses/create': {
      id: '/(protected)/curriculum/courses/create'
      path: '/curriculum/courses/create'
      fullPath: '/curriculum/courses/create'
      preLoaderRoute: typeof protectedCurriculumCoursesCreateRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/curriculum/$curriculumId_/edit': {
      id: '/(protected)/curriculum/$curriculumId_/edit'
      path: '/curriculum/$curriculumId/edit'
      fullPath: '/curriculum/$curriculumId/edit'
      preLoaderRoute: typeof protectedCurriculumCurriculumIdEditRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/$courseCode_/publish': {
      id: '/(protected)/courses/$courseCode_/publish'
      path: '/courses/$courseCode/publish'
      fullPath: '/courses/$courseCode/publish'
      preLoaderRoute: typeof protectedCoursesCourseCodePublishRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/$courseCode_/edit': {
      id: '/(protected)/courses/$courseCode_/edit'
      path: '/courses/$courseCode/edit'
      fullPath: '/courses/$courseCode/edit'
      preLoaderRoute: typeof protectedCoursesCourseCodeEditRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/billing/$billingId_/edit': {
      id: '/(protected)/billing/$billingId_/edit'
      path: '/billing/$billingId/edit'
      fullPath: '/billing/$billingId/edit'
      preLoaderRoute: typeof protectedBillingBillingIdEditRouteImport
      parentRoute: typeof protectedRouteRoute
    }
    '/(protected)/courses/$courseCode/overview/': {
      id: '/(protected)/courses/$courseCode/overview/'
      path: '/overview'
      fullPath: '/courses/$courseCode/overview'
      preLoaderRoute: typeof protectedCoursesCourseCodeOverviewIndexRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
    '/(protected)/courses/$courseCode/modules/': {
      id: '/(protected)/courses/$courseCode/modules/'
      path: '/modules'
      fullPath: '/courses/$courseCode/modules'
      preLoaderRoute: typeof protectedCoursesCourseCodeModulesIndexRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
    '/(protected)/courses/$courseCode/grades/': {
      id: '/(protected)/courses/$courseCode/grades/'
      path: '/grades'
      fullPath: '/courses/$courseCode/grades'
      preLoaderRoute: typeof protectedCoursesCourseCodeGradesIndexRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
    '/(protected)/courses/$courseCode/assignments/': {
      id: '/(protected)/courses/$courseCode/assignments/'
      path: '/assignments'
      fullPath: '/courses/$courseCode/assignments'
      preLoaderRoute: typeof protectedCoursesCourseCodeAssignmentsIndexRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
    '/(protected)/courses/$courseCode/modules/create': {
      id: '/(protected)/courses/$courseCode/modules/create'
      path: '/modules/create'
      fullPath: '/courses/$courseCode/modules/create'
      preLoaderRoute: typeof protectedCoursesCourseCodeModulesCreateRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
    '/(protected)/courses/$courseCode/modules/$itemId/': {
      id: '/(protected)/courses/$courseCode/modules/$itemId/'
      path: '/modules/$itemId'
      fullPath: '/courses/$courseCode/modules/$itemId'
      preLoaderRoute: typeof protectedCoursesCourseCodeModulesItemIdIndexRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
    '/(protected)/courses/$courseCode/modules/$itemId/edit': {
      id: '/(protected)/courses/$courseCode/modules/$itemId/edit'
      path: '/modules/$itemId/edit'
      fullPath: '/courses/$courseCode/modules/$itemId/edit'
      preLoaderRoute: typeof protectedCoursesCourseCodeModulesItemIdEditRouteImport
      parentRoute: typeof protectedCoursesCourseCodeRoute
    }
  }
}

interface protectedCoursesCourseCodeRouteChildren {
  protectedCoursesCourseCodeModulesCreateRoute: typeof protectedCoursesCourseCodeModulesCreateRoute
  protectedCoursesCourseCodeAssignmentsIndexRoute: typeof protectedCoursesCourseCodeAssignmentsIndexRoute
  protectedCoursesCourseCodeGradesIndexRoute: typeof protectedCoursesCourseCodeGradesIndexRoute
  protectedCoursesCourseCodeModulesIndexRoute: typeof protectedCoursesCourseCodeModulesIndexRoute
  protectedCoursesCourseCodeOverviewIndexRoute: typeof protectedCoursesCourseCodeOverviewIndexRoute
  protectedCoursesCourseCodeModulesItemIdEditRoute: typeof protectedCoursesCourseCodeModulesItemIdEditRoute
  protectedCoursesCourseCodeModulesItemIdIndexRoute: typeof protectedCoursesCourseCodeModulesItemIdIndexRoute
}

const protectedCoursesCourseCodeRouteChildren: protectedCoursesCourseCodeRouteChildren =
  {
    protectedCoursesCourseCodeModulesCreateRoute:
      protectedCoursesCourseCodeModulesCreateRoute,
    protectedCoursesCourseCodeAssignmentsIndexRoute:
      protectedCoursesCourseCodeAssignmentsIndexRoute,
    protectedCoursesCourseCodeGradesIndexRoute:
      protectedCoursesCourseCodeGradesIndexRoute,
    protectedCoursesCourseCodeModulesIndexRoute:
      protectedCoursesCourseCodeModulesIndexRoute,
    protectedCoursesCourseCodeOverviewIndexRoute:
      protectedCoursesCourseCodeOverviewIndexRoute,
    protectedCoursesCourseCodeModulesItemIdEditRoute:
      protectedCoursesCourseCodeModulesItemIdEditRoute,
    protectedCoursesCourseCodeModulesItemIdIndexRoute:
      protectedCoursesCourseCodeModulesItemIdIndexRoute,
  }

const protectedCoursesCourseCodeRouteWithChildren =
  protectedCoursesCourseCodeRoute._addFileChildren(
    protectedCoursesCourseCodeRouteChildren,
  )

interface protectedRouteRouteChildren {
  protectedBillingBillingIdRoute: typeof protectedBillingBillingIdRoute
  protectedBillingCreateRoute: typeof protectedBillingCreateRoute
  protectedBillingRedirectRoute: typeof protectedBillingRedirectRoute
  protectedCoursesCourseCodeRoute: typeof protectedCoursesCourseCodeRouteWithChildren
  protectedCurriculumCurriculumIdRoute: typeof protectedCurriculumCurriculumIdRoute
  protectedCurriculumCreateRoute: typeof protectedCurriculumCreateRoute
  protectedEnrollmentPeriodIdRoute: typeof protectedEnrollmentPeriodIdRoute
  protectedEnrollmentCreateRoute: typeof protectedEnrollmentCreateRoute
  protectedBillingIndexRoute: typeof protectedBillingIndexRoute
  protectedCmsIndexRoute: typeof protectedCmsIndexRoute
  protectedCoursesIndexRoute: typeof protectedCoursesIndexRoute
  protectedCurriculumIndexRoute: typeof protectedCurriculumIndexRoute
  protectedDashboardIndexRoute: typeof protectedDashboardIndexRoute
  protectedEnrollmentIndexRoute: typeof protectedEnrollmentIndexRoute
  protectedNotificationsIndexRoute: typeof protectedNotificationsIndexRoute
  protectedPricingIndexRoute: typeof protectedPricingIndexRoute
  protectedProfileIndexRoute: typeof protectedProfileIndexRoute
  protectedUsersIndexRoute: typeof protectedUsersIndexRoute
  protectedBillingBillingIdEditRoute: typeof protectedBillingBillingIdEditRoute
  protectedCoursesCourseCodeEditRoute: typeof protectedCoursesCourseCodeEditRoute
  protectedCoursesCourseCodePublishRoute: typeof protectedCoursesCourseCodePublishRoute
  protectedCurriculumCurriculumIdEditRoute: typeof protectedCurriculumCurriculumIdEditRoute
  protectedCurriculumCoursesCreateRoute: typeof protectedCurriculumCoursesCreateRoute
  protectedCurriculumBuilderIndexRoute: typeof protectedCurriculumBuilderIndexRoute
  protectedCurriculumCoursesIndexRoute: typeof protectedCurriculumCoursesIndexRoute
  protectedCurriculumMajorsIndexRoute: typeof protectedCurriculumMajorsIndexRoute
  protectedCurriculumProgramsIndexRoute: typeof protectedCurriculumProgramsIndexRoute
}

const protectedRouteRouteChildren: protectedRouteRouteChildren = {
  protectedBillingBillingIdRoute: protectedBillingBillingIdRoute,
  protectedBillingCreateRoute: protectedBillingCreateRoute,
  protectedBillingRedirectRoute: protectedBillingRedirectRoute,
  protectedCoursesCourseCodeRoute: protectedCoursesCourseCodeRouteWithChildren,
  protectedCurriculumCurriculumIdRoute: protectedCurriculumCurriculumIdRoute,
  protectedCurriculumCreateRoute: protectedCurriculumCreateRoute,
  protectedEnrollmentPeriodIdRoute: protectedEnrollmentPeriodIdRoute,
  protectedEnrollmentCreateRoute: protectedEnrollmentCreateRoute,
  protectedBillingIndexRoute: protectedBillingIndexRoute,
  protectedCmsIndexRoute: protectedCmsIndexRoute,
  protectedCoursesIndexRoute: protectedCoursesIndexRoute,
  protectedCurriculumIndexRoute: protectedCurriculumIndexRoute,
  protectedDashboardIndexRoute: protectedDashboardIndexRoute,
  protectedEnrollmentIndexRoute: protectedEnrollmentIndexRoute,
  protectedNotificationsIndexRoute: protectedNotificationsIndexRoute,
  protectedPricingIndexRoute: protectedPricingIndexRoute,
  protectedProfileIndexRoute: protectedProfileIndexRoute,
  protectedUsersIndexRoute: protectedUsersIndexRoute,
  protectedBillingBillingIdEditRoute: protectedBillingBillingIdEditRoute,
  protectedCoursesCourseCodeEditRoute: protectedCoursesCourseCodeEditRoute,
  protectedCoursesCourseCodePublishRoute:
    protectedCoursesCourseCodePublishRoute,
  protectedCurriculumCurriculumIdEditRoute:
    protectedCurriculumCurriculumIdEditRoute,
  protectedCurriculumCoursesCreateRoute: protectedCurriculumCoursesCreateRoute,
  protectedCurriculumBuilderIndexRoute: protectedCurriculumBuilderIndexRoute,
  protectedCurriculumCoursesIndexRoute: protectedCurriculumCoursesIndexRoute,
  protectedCurriculumMajorsIndexRoute: protectedCurriculumMajorsIndexRoute,
  protectedCurriculumProgramsIndexRoute: protectedCurriculumProgramsIndexRoute,
}

const protectedRouteRouteWithChildren = protectedRouteRoute._addFileChildren(
  protectedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  protectedRouteRoute: protectedRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authUpdatePasswordRoute: authUpdatePasswordRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
