services:
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale_n8n
    hostname: n8n
    environment:
      TS_AUTHKEY: ${TS_AUTHKEY}
      TS_STATE_DIR: /var/lib/tailscale
      TS_USERSPACE: false
      TS_SERVE_CONFIG: /config/serve.json
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
    volumes:
      - ${PROJECT_DIR}/tailscale:/config
      - ${PROJECT_DIR}/tailscale_state:/var/lib/tailscale

  db:
    image: postgres:16-alpine
    container_name: db
    restart: unless-stopped
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${PROJECT_DIR}/database:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: n8nio/n8n:1.106.2
    container_name: n8n
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_HOST=${POSTGRESDB_HOST}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - NODE_ENV=${NODE_ENV}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - NODE_FUNCTION_ALLOW_BUILTIN=*
    depends_on:
      db:
        condition: service_healthy
    network_mode: service:tailscale
    volumes:
      - ${PROJECT_DIR}/n8n_data:/home/node/.n8n
      - ${PROJECT_DIR}/local-files:/files
